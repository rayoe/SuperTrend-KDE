//@version=5
indicator("Supertrend with Improved KDE", overlay=true)

// Supertrend Parameters
atrLength = input(14, title="ATR Length")
factor = input.float(3.0, title="Supertrend Factor")

// Calculate ATR and Supertrend
atr = ta.atr(atrLength)
upperBand = ta.hlc3 + factor * atr
lowerBand = ta.hlc3 - factor * atr
trendUp = na(trendUp[1]) ? upperBand : (close[1] > trendUp[1] ? math.max(upperBand, trendUp[1]) : upperBand)
trendDown = na(trendDown[1]) ? lowerBand : (close[1] < trendDown[1] ? math.min(lowerBand, trendDown[1]) : lowerBand)
supertrend = close > trendDown[1] ? trendUp : trendDown

// Direction Variable: 1 for uptrend, -1 for downtrend
direction = close > supertrend ? 1 : -1

// Gaussian KDE Approximation (Weighted Moving Average)
kdeLength = input(20, title="KDE Length")
sigma = input.float(2.0, title="Gaussian Sigma")  // Width of the Gaussian function

// Create a Gaussian kernel
gaussianKernel(n, sigma) =>
    norm = 1 / (sigma * math.sqrt(2 * math.pi))
    expTerm = math.exp(-0.5 * math.pow(n / sigma, 2))
    norm * expTerm

// Apply Gaussian kernel weights to price data
kdeSum = 0.0
weightSum = 0.0
for i = 0 to kdeLength - 1
    weight = gaussianKernel(i - (kdeLength / 2), sigma)  // Calculate weight using Gaussian function
    kdeSum := kdeSum + close[i] * weight
    weightSum := weightSum + weight

kde = kdeSum / weightSum  // Weighted moving average approximation

// Plot Supertrend and KDE
plot(supertrend, color=close > supertrend ? color.green : color.red, linewidth=2)
plot(kde, color=color.blue, linewidth=2)

// Buy/Sell signals based on Supertrend and KDE
buySignal = direction == 1 and close > supertrend and close > kde
sellSignal = direction == -1 and close < supertrend and close < kde

// Plot buy/sell signals
plotshape(buySignal, style=shape.labelup, location=location.belowbar, color=color.green, text="BUY", size=size.small)
plotshape(sellSignal, style=shape.labeldown, location=location.abovebar, color=color.red, text="SELL", size=size.small)
