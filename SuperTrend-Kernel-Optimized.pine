//@version=5
indicator("SuperTrend Kernel Optimized", overlay=true)

// Input Parameters
factor = input.float(1.5, title="Multiplier")
bandwidth = input.float(1.0, title="Bandwidth")
atr_len = input.int(10, title="ATR Length", group="SuperTrend Settings")

// ATR Calculation
atrr = ta.atr(atr_len)

// SuperTrend Function
SuperTrend(factor, atr) =>
    src = close
    upperBand = src + factor * atr
    lowerBand = src - factor * atr

    // Ensure continuity for upper and lower bands
    upperBand := na(upperBand[1]) or close[1] < upperBand[1] ? upperBand : upperBand[1]
    lowerBand := na(lowerBand[1]) or close[1] > lowerBand[1] ? lowerBand : lowerBand[1]

    float supertrend = na
    int dir = na

    // Initialization

        // Check for trend reversals
    if supertrend[1] == lowerBand[1] and close > upperBand
        dir := -1
        supertrend := upperBand
    else if supertrend[1] == upperBand[1] and close < lowerBand
            
        dir := 1
        supertrend := lowerBand
    else
            // Continuation of current trend
        dir := supertrend[1] == lowerBand[1] ? 1 : -1
        supertrend := dir == 1 ? lowerBand : upperBand

    [supertrend, dir]

// Call SuperTrend
[supertrend, dir] = SuperTrend(factor, atrr)

// Plot the SuperTrend lines based on the direction
upTrend = plot(dir == 1 ? supertrend : na, color=color.green, style=plot.style_linebr, title="UpTrend Line")
downTrend = plot(dir == -1 ? supertrend : na, color=color.red, style=plot.style_linebr, title="DownTrend Line")

// Fill Areas Between Candle Body and SuperTrend Line
bodyMiddle = plot((open + close) / 2, display=display.none, title="Candle Body Middle")

fill(bodyMiddle, upTrend, (open + close) / 2, supertrend, color.green, color.new(color.green, 90))
fill(bodyMiddle, downTrend, supertrend, (open + close) / 2, color.red, color.new(color.red, 90))
